// Generated by jextract

package com.icuxika.jextract.win32;

import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;

/**
 * {@snippet :
 * long long (*HOOKPROC)(int code,unsigned long long wParam,long long lParam);
 *}
 */
public interface HOOKPROC {

    long apply(int code, long wParam, long lParam);

    static MemorySegment allocate(HOOKPROC fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$0.const$3, fi, constants$0.const$2, scope);
    }

    static HOOKPROC ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _code, long _wParam, long _lParam) -> {
            try {
                return (long) constants$0.const$4.invokeExact(symbol, _code, _wParam, _lParam);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


